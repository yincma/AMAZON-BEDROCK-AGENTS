# Coverage configuration for AI PPT Assistant tests
[run]
# Source directories to measure
source = lambdas

# Include patterns
include = lambdas/*

# Exclude patterns
omit = 
    */venv/*
    */venv-*/*
    */.venv/*
    */build/*
    */dist/*
    */.*
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */settings/*
    */manage.py
    */wsgi.py
    */asgi.py
    # Exclude specific files
    lambdas/layers/build/*
    lambdas/layers/python/*
    lambdas/*/__init__.py
    # Template files
    */templates/*
    */static/*

# Branch coverage
branch = True

# Parallel processing for faster coverage collection
parallel = True

# Concurrency support
concurrency = thread,multiprocessing

[report]
# Reporting options
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    # Type checking
    if TYPE_CHECKING:
    # Lambda handler decorators
    @logger\.inject_lambda_context
    @tracer\.capture_lambda_handler
    @metrics\.log_metrics

# Show missing lines
show_missing = True

# Include branch coverage in report
show_branch = True

# Skip covered files in report
skip_covered = False

# Skip empty files
skip_empty = False

# Precision for coverage percentage
precision = 2

# Sort by coverage percentage
sort = Cover

[html]
# HTML report directory
directory = htmlcov

# Include branch coverage in HTML report
show_contexts = True

# Skip covered files in HTML report
skip_covered = False

# Skip empty files in HTML report
skip_empty = False

# Title for HTML report
title = AI PPT Assistant - Test Coverage Report

[xml]
# XML report filename
output = coverage.xml

[json]
# JSON report filename
output = coverage.json

# Pretty print JSON
pretty_print = True

# Include contexts in JSON
show_contexts = True
[tool:pytest]
# pytest配置文件 - 图片生成服务测试套件配置

# 测试发现配置
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 输出配置
addopts =
    -v
    --strict-markers
    --strict-config
    --tb=short
    --showlocals
    --cov=lambdas
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --color=yes
    --code-highlight=yes
    --junit-xml=test-results/junit.xml

# 标记定义
markers =
    unit: 单元测试 - 快速的独立测试
    integration: 集成测试 - 测试多个组件的交互
    e2e: 端到端测试 - 完整的用户场景测试
    performance: 性能测试 - 测试系统性能指标
    stress: 压力测试 - 高负载和极限条件测试
    load: 负载测试 - 持续负载下的系统行为
    scalability: 扩展性测试 - 系统扩展能力测试
    benchmark: 基准测试 - 性能基准和对比测试
    slow: 运行时间较长的测试（超过10秒）
    aws: 需要AWS服务的测试
    smoke: 冒烟测试
    api: API相关测试
    security: 安全性测试
    network: 需要网络连接的测试
    timeout: 可能超时的测试

# 过滤器
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::ResourceWarning
    ignore:.*The 'body' field is deprecated.*:DeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# 最小版本要求
minversion = 7.0

# 测试超时
timeout = 300
timeout_method = thread

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 缓存设置
cache_dir = .pytest_cache

# 测试发现排除
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    __pycache__
    node_modules
    .pytest_cache
    .coverage
    htmlcov
    *.egg

# 环境变量
env =
    ENVIRONMENT = test
    AWS_ACCESS_KEY_ID = testing
    AWS_SECRET_ACCESS_KEY = testing
    AWS_SECURITY_TOKEN = testing
    AWS_SESSION_TOKEN = testing
    AWS_DEFAULT_REGION = us-east-1
    DEBUG = true
    CACHE_ENABLED = true
    PARALLEL_PROCESSING = true

# xfail设置
xfail_strict = true

# 控制台输出
console_output_style = progress

# 异步测试支持
asyncio_mode = auto

